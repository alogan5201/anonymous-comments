/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 8);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/travel.js":
/*!**************************!*\
  !*** ./src/js/travel.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*jshint esversion: 8 */\nlet geojson = {\n  type: \"FeatureCollection\",\n  features: [{\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [0, 0]\n    },\n    properties: {\n      title: \"Mapbox DC\",\n      description: \"1714 14th St NW, Washington DC\",\n      \"marker-color\": \"#35A2D1\",\n      \"marker-size\": \"large\",\n      \"marker-symbol\": \"1\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [0, 0]\n    },\n    properties: {\n      title: \"Mapbox SF\",\n      description: \"155 9th St, San Francisco\",\n      \"marker-color\": \"#fc4353\",\n      \"marker-size\": \"large\",\n      \"marker-symbol\": \"2\"\n    }\n  }]\n};\n\nfunction inputFocus(x) {\n  if ($(\"#secondOutput\").hasClass(\"second\")) {\n    $(\"#secondOutput\").removeClass(\"second\").addClass(\"fadeOut\");\n    $(\"#firstOutput\").removeClass(\"first\").addClass(\"fadeOut\");\n    setTimeout(() => {\n      $(\"#secondOutput\").addClass(\"d-none\");\n      $(\"#firstOutput\").addClass(\"d-none\");\n    }, 2000);\n  } //\n\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  async function convertLatLon(lat, lon) {\n    const query = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${lon},${lat}.json?access_token=pk.eyJ1IjoibG9nYW41MjAxIiwiYSI6ImNrcTQycnlhMDBlb2kydXBwZHoyOGNsY3EifQ.E8N4lPy6tiI0xY3nor3MTg`, {\n      method: \"GET\"\n    });\n\n    if (query.status !== 200) {\n      console.log(query.status);\n      return;\n    }\n\n    const data = await query.json();\n\n    if (data.features.length == 0) {\n      $(\".alert-warning\").removeClass(\"invisible\").addClass(\"visible\");\n    } else if (data.features.length > 0 && $(\".alert-warning\").hasClass(\"visible\")) {\n      $(\".alert-warning\").removeClass(\"visible\").addClass(\"invisible\");\n    }\n\n    return data;\n  }\n\n  async function convertAddress(city) {\n    const query = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${city}.json?access_token=pk.eyJ1IjoibG9nYW41MjAxIiwiYSI6ImNrcTQybTFoZzE0aDQyeXM1aGNmYnR1MnoifQ.4kRWNfEH_Yao_mmdgrgjPA`, {\n      method: \"GET\"\n    });\n\n    if (query.status !== 200) {\n      alert(query.status);\n      return;\n    }\n\n    const data = await query.json();\n    console.log(data);\n    return data;\n  }\n\n  let scrollPos = 0;\n  const mainNav = document.getElementById(\"mainNav\");\n  const headerHeight = mainNav.clientHeight;\n\n  function ConvertDMSToDD(degrees, minutes, seconds, direction) {\n    var dd = degrees + minutes / 60 + seconds / (60 * 60);\n\n    if (direction == \"S\" || direction == \"W\") {\n      dd = dd * -1;\n    } // Don't do anything for N or E\n\n\n    return dd;\n  }\n\n  const north = document.getElementById(\"north\");\n  const south = document.getElementById(\"south\");\n  const degreesLat = document.getElementById(\"degrees-lat\");\n  const minutesLat = document.getElementById(\"minutes-lat\");\n  const secondsLat = document.getElementById(\"seconds-lat\");\n  const degreesLon = document.getElementById(\"degrees-lon\");\n  const minutesLon = document.getElementById(\"minutes-lon\");\n  const secondsLon = document.getElementById(\"seconds-lon\");\n  const east = document.getElementById(\"east\");\n  const west = document.getElementById(\"west\");\n  const outputInputField = document.getElementById(\"output-field-input\");\n  const dmsBtn = document.getElementById(\"dmsBtn\");\n  const dmsForm = document.getElementById(\"dms\");\n  const latlonForm = document.getElementById(\"latlonForm\");\n\n  function DDtoDMS(lat, lon) {\n    ////\n    north.checked = lat >= 0 ? true : false;\n    south.check = lat < 0 ? true : false;\n    east.checked = lon >= 0 ? true : false;\n    west.checked = lon < 0 ? true : false;\n    let latitude = Math.abs(lat);\n    let longitude = Math.abs(lon);\n    let dLat = Math.floor(latitude);\n    let mLat = Math.floor((latitude - dLat) * 60);\n    sLat = Math.round((latitude - dLat - mLat / 60) * 1e3 * 3600) / 1e3;\n    dLon = Math.floor(longitude);\n    mLon = Math.floor((longitude - dLon) * 60);\n    sLon = Math.floor((longitude - dLon - mLon / 60) * 1e3 * 3600) / 1e3;\n    let degreesLatitude = dLat;\n    let minutesLatitude = mLat;\n    let secondsLatitude = sLat;\n    let degreesLongitude = dLon;\n    let minutesLongitude = mLon;\n    let secondsLongitude = sLon;\n    document.getElementById(\"degrees-lat\").value = degreesLatitude;\n    document.getElementById(\"minutes-lat\").value = minutesLatitude;\n    document.getElementById(\"seconds-lat\").value = secondsLatitude;\n    document.getElementById(\"degrees-lon\").value = degreesLongitude;\n    document.getElementById(\"minutes-lon\").value = minutesLongitude;\n    document.getElementById(\"seconds-lon\").value = secondsLongitude;\n  }\n\n  function check(elm) {\n    document.getElementById(elm).checked = true;\n  }\n\n  const latInputField = document.getElementById(\"latInputField\");\n  const lonInputField = document.getElementById(\"lonInputField\");\n\n  const App = function _App() {\n    return `\n <h1>Global State = [${App.state.count}] </h1>\n`;\n  };\n\n  const handler = {\n    set: function (obj, prop, value) {\n      obj[prop] = value;\n    }\n  };\n  App.state = new Proxy({\n    count: 0\n  }, handler); // Initial Loading of the App\n\n  const CoordsApp = function _CoordsApp() {\n    return `\n <h1>Origin State = [${CoordsApp.state.origin}] </h1> </br>\n <h1>Destination State = [${CoordsApp.state.destination}] </h1>\n <h1>User Location = [${CoordsApp.state.userLocation}] </h1>\n <h1>trackingUser =  ${CoordsApp.state.trackingUser}</h1>\n`;\n  };\n\n  const myhandler = {\n    set: function (obj, prop, value) {\n      obj[prop] = value;\n    }\n  };\n  CoordsApp.state = new Proxy({\n    origin: [],\n    destination: [],\n    userLocation: []\n  }, myhandler);\n  L.mapbox.accessToken = \"pk.eyJ1IjoibG9nYW41MjAxIiwiYSI6ImNrcTQybTFoZzE0aDQyeXM1aGNmYnR1MnoifQ.4kRWNfEH_Yao_mmdgrgjPA\";\n\n  const finishedLoading = () => {\n    setTimeout(function () {\n      // then, after a half-second, add the class 'hide', which hides\n      // it completely and ensures that the user can interact with the\n      // map again.\n      console.log('loaded');\n    }, 500);\n  };\n\n  const map = L.mapbox.map(\"map\").setView([37.9, -77], 6);\n  L.mapbox.styleLayer(\"mapbox://styles/mapbox/streets-v11\").addTo(map) // add your tiles to the map\n  .on(\"load\", finishedLoading); // L.marker is a low-level marker constructor in Leaflet.\n\n  var featureLayer = L.mapbox.featureLayer().addTo(map);\n\n  const coordinatesGeocoder = function (query) {\n    // Match anything which looks like\n    // decimal degrees coordinate pair.\n    const matches = query.match(/^[ ]*(?:Lat: )?(-?\\d+\\.?\\d*)[, ]+(?:Lng: )?(-?\\d+\\.?\\d*)[ ]*$/i);\n\n    if (!matches) {\n      return null;\n    }\n\n    function coordinateFeature(lng, lat) {\n      return {\n        center: [lng, lat],\n        geometry: {\n          type: \"Point\",\n          coordinates: [lng, lat]\n        },\n        place_name: \"Lat: \" + lat + \" Lng: \" + lng,\n        place_type: [\"coordinate\"],\n        properties: {},\n        type: \"Feature\"\n      };\n    }\n\n    const coord1 = Number(matches[1]);\n    const coord2 = Number(matches[2]);\n    const geocodes = [];\n\n    if (coord1 < -90 || coord1 > 90) {\n      // must be lng, lat\n      geocodes.push(coordinateFeature(coord1, coord2));\n    }\n\n    if (coord2 < -90 || coord2 > 90) {\n      // must be lat, lng\n      geocodes.push(coordinateFeature(coord2, coord1));\n    }\n\n    if (geocodes.length === 0) {\n      // else could be either lng, lat or lat, lng\n      geocodes.push(coordinateFeature(coord1, coord2));\n      geocodes.push(coordinateFeature(coord2, coord1));\n    }\n\n    return geocodes;\n  };\n\n  $(\"#originTest\").click(function (e) {\n    e.preventDefault();\n    $(\"#getTravelForm\").find(\"input:eq(0)\").val(\"Atlanta, GA\");\n    $(\"#getTravelForm\").find(\"input:eq(1)\").val(\"Lagrange, GA\");\n  });\n  $(\"#switchTest\").click(function (e) {\n    e.preventDefault();\n    $(\"#getTravelForm\").find(\"input:eq(0)\").val(\"Birmingham, AL\");\n    $(\"#getTravelForm\").find(\"input:eq(1)\").val(\"Mobile, AL\");\n  });\n\n  function addRoute() {\n    App.state.count++;\n    const origin = CoordsApp.state.origin;\n    const destination = CoordsApp.state.destination;\n    let latD = destination[1];\n    let lonD = destination[0];\n    let latO = origin[1];\n    let lonO = origin[0];\n    geojson.features[0].geometry.coordinates = [lonO, latO];\n    geojson.features[1].geometry.coordinates = [lonD, latD];\n    featureLayer.setGeoJSON(geojson);\n    let latOrigin = origin[1];\n    let lonOrigin = origin[0];\n    let latDest = destination[1];\n    let lonDest = destination[0]; //\n\n    map.fitBounds([[latOrigin, lonOrigin], [latDest, lonDest]], {\n      padding: [50, 50]\n    });\n  }\n\n  async function addNewRoute(locationData) {\n    let latOrigin = locationData.origin.lat;\n    let lonOrigin = locationData.origin.lon;\n    let latDestination = locationData.destination.lat;\n    let lonDestination = locationData.destination.lon;\n    const query1 = `${lonOrigin},${latOrigin}`;\n    const query2 = `${lonDestination},${latDestination}`; //  destinationMarker.setLatLng(origin[1], origin[0])\n\n    await callMatrix(query1, query2);\n    geojson.features[0].geometry.coordinates = [lonOrigin, latOrigin];\n    geojson.features[1].geometry.coordinates = [lonDestination, latDestination];\n    featureLayer.setGeoJSON(geojson);\n    featureLayer.setGeoJSON(geojson);\n    map.fitBounds([[latOrigin, lonOrigin], [latDestination, lonDestination]], {\n      padding: [50, 50]\n    });\n  }\n\n  function format(time) {\n    // Hours, minutes and seconds\n    var hrs = ~~(time / 3600);\n    var mins = ~~(time % 3600 / 60);\n    let result = {\n      hours: hrs,\n      minutes: mins\n    }; // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n\n    return result;\n  }\n\n  function callMatrix(first, second) {\n    fetch(`https://api.mapbox.com/directions-matrix/v1/mapbox/driving/${first};${second}?&access_token=pk.eyJ1IjoibG9nYW41MjAxIiwiYSI6ImNrcTQycnlhMDBlb2kydXBwZHoyOGNsY3EifQ.E8N4lPy6tiI0xY3nor3MTg`).then(response => response.json()).then(json => {\n      console.log(json);\n      const durations = json.durations[0];\n      const travelTime = durations[1];\n      const result = format(travelTime); // //\n\n      console.log(result);\n      var alertPlaceholder = document.getElementById(\"liveAlertPlaceholder\");\n      var alertTrigger = document.getElementById(\"liveAlertBtn\");\n\n      function postLog(message) {\n        var wrapper = document.createElement(\"div\");\n        wrapper.innerHTML = `\n  <div class=\"alert alert-secondary d-flex align-items-center justify-content-between\" role=\"alert\">\n   <div class=\"alertMessage\">\n     ${message}\n   </div>\n\n\n </div>`;\n        alertPlaceholder.appendChild(wrapper);\n      }\n\n      if (alertPlaceholder.childElementCount == 0) {\n        postLog(`${result.hours} hour(s) and ${result.minutes} minutes`);\n      } else if (alertPlaceholder.childElementCount == 1) {\n        postLog(`${result.hours} hour(s) and ${result.minutes} minutes`);\n      } else if (alertPlaceholder.childElementCount == 2) {\n        $(\"#liveAlertPlaceholder\").empty();\n        setTimeout(() => {\n          postLog(`${result.hours} hour(s) and ${result.minutes}`);\n        }, 200);\n      }\n      /*\n      if(localStorage.getItem('travel-time-two')){\n      $(\".first\").addClass(\"fadeOut\").removeClass(\"first\")\n      $(\".second\").addClass(\"fadeOut\").removeClass(\"second\")\n      localStorage.removeItem('travel-time-two');\n      localStorage.removeItem('travel-time-one');\n      setTimeout(() => {\n      $(\"button.first\").remove();\n      $(\"button.second\").remove();\n      $('#addressHistory').append(` <button type=\"button\" class=\"list-group-item list-group-item-action first\">${result.hours} hour(s) and ${result.minutes} minutes </button>`);\n      localStorage.setItem('travel-time-one', `${result.hours}hour(s)${result.minutes}`);\n      }, 600);\n      } else if (localStorage.getItem('travel-time-one') && !localStorage.getItem('travel-time-two')){\n      $('#addressHistory').append(` <button type=\"button\" class=\"list-group-item list-group-item-action second\">${result.hours} hour(s) and ${result.minutes} minutes</button>`);\n      localStorage.setItem('travel-time-two', `${result.hours}hour(s)${result.minutes}`);\n      } else {\n      $('#addressHistory').append(` <button type='button' class='list-group-item list-group-item-action first'>${result.hours} hour(s) and ${result.minutes} minutes </button>`);\n      localStorage.setItem('travel-time-one', `${result.hours}hour(s)${result.minutes}`);\n      }\n             */\n\n    });\n  }\n\n  var locationControl = L.control.locate({\n    circleStyle: {\n      opacity: 0\n    },\n    followCircleStyle: {\n      opacity: 0\n    },\n    drawCircle: false,\n    follow: false,\n    icon: \"fas fa-map-marker-alt\",\n    // follow the user's location\n    setView: false,\n    remainActive: false\n  }).addTo(map);\n  map.on(\"locationfound\", async function (e) {\n    map.fitBounds(e.bounds);\n    let lat = e.latlng.lat;\n    let lon = e.latlng.lng;\n    geojson.features[0].geometry.coordinates = [lon, lat];\n    featureLayer.setGeoJSON(geojson);\n    const address = await convertLatLon(lat, lon);\n    setTimeout(() => {\n      $('form').first().find(\"input:eq(0)\").val(address.features[0].place_name);\n    }, 200);\n    locationControl.stop(); // And hide the geolocation button\n  }); // If the user chooses not to allow their location\n  // to be shared, display an error message.\n\n  map.on(\"locationerror\", function () {\n    geolocate.innerHTML = \"Position could not be found\";\n  }); // !! Travel FORM   ---------------------------------------------->\n\n  /**\n  *\n  *  console.log(\"%c My Friends\",\"color:orange; font-weight:bold; font-size: 2em\");\n   //✅\n  *  */\n\n  function consoleRed(message) {\n    let msg = `%c ${message}`;\n    console.log(msg, \"color:red; font-weight:bold; font-size: 1em\");\n  }\n\n  function consoleBlue(message) {\n    let msg = `%c ${message}`;\n    console.log(msg, \"color:blue; font-weight:bold; font-size: 1em\");\n  }\n\n  const addRouteTest = async locationData => {\n    App.state.count++;\n    let latOrigin = locationData.origin.lat;\n    let lonOrigin = locationData.origin.lon;\n    let latDestination = locationData.destination.lat;\n    let lonDestination = locationData.destination.lon;\n    const query1 = `${lonOrigin},${latOrigin}`;\n    const query2 = `${lonDestination},${latDestination}`; //  destinationMarker.setLatLng(origin[1], origin[0])\n\n    await callMatrix(query1, query2);\n    console.log(latOrigin);\n    console.log(lonOrigin);\n    console.log(latDestination);\n    console.log(lonDestination);\n    console.log('test');\n    geojson.features[0].geometry.coordinates = [lonOrigin, latOrigin];\n    geojson.features[1].geometry.coordinates = [lonDestination, latDestination];\n    featureLayer.setGeoJSON(geojson);\n    map.fitBounds([[latOrigin, lonOrigin], [latDestination, lonDestination]], {\n      padding: [50, 50]\n    });\n  }; // ** NEW FORM   ------------------------------------------------->\n\n\n  $(\"#getTravelForm\").on(\"submit\", async function (e) {\n    e.preventDefault();\n    const originInput = $(this).find(\"input:eq(0)\").val();\n    const destinationInput = $(this).find(\"input:eq(1)\").val();\n    /*   console.log(originInput);\n    console.log(destinationInput); */\n\n    const originFetch = convertAddress(originInput);\n    const destinationFetch = convertAddress(destinationInput);\n    const result = await Promise.all([originFetch, destinationFetch]);\n    setTimeout(() => {\n      if (result && App.state.count == 0) {\n        let origin = result[0].features[0].geometry.coordinates;\n        let originLat = result[0].features[0].geometry.coordinates[1];\n        let originLon = result[0].features[0].geometry.coordinates[0];\n        let destination = result[1].features[1].geometry.coordinates;\n        let destinationLat = result[1].features[0].geometry.coordinates[1];\n        let destinationLon = result[1].features[0].geometry.coordinates[0];\n        console.log(`origin = ${JSON.stringify(origin)} destination = ${JSON.stringify(destination)}`);\n        CoordsApp.state.origin = origin;\n        CoordsApp.state.destination = destination; //✅\n        //  const createRoute = addRoute();\n\n        const locationData = {\n          origin: {\n            lat: originLat,\n            lon: originLon\n          },\n          destination: {\n            lat: destinationLat,\n            lon: destinationLon\n          }\n        };\n        addRouteTest(locationData);\n      } else if (result && App.state.count > 0) {\n        let origin = result[0].features[0].geometry.coordinates;\n        let originLat = result[0].features[0].geometry.coordinates[1];\n        let originLon = result[0].features[0].geometry.coordinates[0];\n        let destination = result[1].features[1].geometry.coordinates;\n        let destinationLat = result[1].features[0].geometry.coordinates[1];\n        let destinationLon = result[1].features[0].geometry.coordinates[0];\n        const locationData = {\n          origin: {\n            lat: originLat,\n            lon: originLon\n          },\n          destination: {\n            lat: destinationLat,\n            lon: destinationLon\n          }\n        };\n        const newRoute = addNewRoute(locationData);\n        return newRoute;\n      }\n    }, 200);\n  });\n  let bookmarkControl = new L.Control.Bookmarks().addTo(map);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/travel.js\n");

/***/ }),

/***/ 8:
/*!********************************!*\
  !*** multi ./src/js/travel.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./src/js/travel.js */"./src/js/travel.js");


/***/ })

/******/ });