/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/addressToLatLon.js":
/*!***********************************!*\
  !*** ./src/js/addressToLatLon.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*jshint esversion: 8 */\nfunction test(e) {\n  e.preventDefault();\n}\n\nasync function convertLatLon(lat, lon) {\n  const query = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${lon},${lat}.json?access_token=pk.eyJ1IjoibG9nYW41MjAxIiwiYSI6ImNrcTQycnlhMDBlb2kydXBwZHoyOGNsY3EifQ.E8N4lPy6tiI0xY3nor3MTg`, {\n    method: \"GET\"\n  });\n\n  if (query.status !== 200) {\n    console.log(query.status);\n    return;\n  }\n\n  const data = await query.json();\n\n  if (data.features.length == 0) {\n    $(\".alert-warning\").removeClass(\"invisible\").addClass(\"visible\");\n  } else if (data.features.length > 0 && $(\".alert-warning\").hasClass(\"visible\")) {\n    $(\".alert-warning\").removeClass(\"visible\").addClass(\"invisible\");\n  }\n\n  return data;\n}\n/* \n\nhttps://api.mapbox.com/geocoding/v5/mapbox.places/$Atlanta,GA.json?access_token=pk.eyJ1IjoibG9nYW41MjAxIiwiYSI6ImNrcTQybTFoZzE0aDQyeXM1aGNmYnR1MnoifQ.4kRWNfEH_Yao_mmdgrgjPA\n\n*/\n\n\nasync function convertAddress(city) {\n  const query = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${city}.json?access_token=pk.eyJ1IjoibG9nYW41MjAxIiwiYSI6ImNrcTQybTFoZzE0aDQyeXM1aGNmYnR1MnoifQ.4kRWNfEH_Yao_mmdgrgjPA`, {\n    method: \"GET\"\n  });\n\n  if (query.status !== 200) {\n    alert(query.status);\n    return;\n  }\n\n  const data = await query.json();\n  console.log(data);\n  return data;\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  let scrollPos = 0;\n  const mainNav = document.getElementById(\"mainNav\");\n  const headerHeight = mainNav.clientHeight;\n});\n$(document).ready(function () {\n  const outputInputField = document.getElementById(\"output-field-input\");\n  const latInputField = document.getElementById(\"latInputField\");\n  const lonInputField = document.getElementById(\"lonInputField\");\n\n  function DDtoDMS(lat, lon) {\n    //\n    let latitude = Math.abs(lat);\n    let longitude = Math.abs(lon);\n    let dLat = Math.floor(latitude);\n    let mLat = Math.floor((latitude - dLat) * 60);\n    sLat = Math.round((latitude - dLat - mLat / 60) * 1e3 * 3600) / 1e3;\n    dLon = Math.floor(longitude);\n    mLon = Math.floor((longitude - dLon) * 60);\n    sLon = Math.floor((longitude - dLon - mLon / 60) * 1e3 * 3600) / 1e3;\n    let degreesLatitude = dLat;\n    let minutesLatitude = mLat;\n    let secondsLatitude = sLat;\n    let degreesLongitude = dLon;\n    let minutesLongitude = mLon;\n    let secondsLongitude = sLon;\n    let latResult = `${degreesLatitude}° ${minutesLatitude}' ${secondsLatitude}''`;\n    let lonResult = `${degreesLongitude}° ${minutesLongitude}' ${secondsLongitude}''`;\n    let result = {\n      lat: latResult,\n      lon: lonResult\n    };\n    return result;\n  }\n\n  const CoordsApp = function _CoordsApp() {\n    return `\n     <h1>Origin State = [${CoordsApp.state.origin}] </h1> </br>\n     <h1>Destination State = [${CoordsApp.state.destination}] </h1>\n     <h1>User Location = [${CoordsApp.state.userLocation}] </h1>\n     <h1>trackingUser =  ${CoordsApp.state.trackingUser}</h1>\n    `;\n  };\n\n  const myhandler = {\n    set: function (obj, prop, value) {\n      obj[prop] = value;\n    }\n  };\n  CoordsApp.state = new Proxy({\n    origin: [],\n    destination: [],\n    userLocation: [],\n    trackingUser: false\n  }, myhandler);\n\n  const finishedLoading = () => {\n    setTimeout(function () {\n      // then, after a half-second, add the class 'hide', which hides\n      // it completely and ensures that the user can interact with the\n      console.log(\"finished\");\n    }, 500);\n  };\n\n  L.mapbox.accessToken = \"pk.eyJ1IjoibG9nYW41MjAxIiwiYSI6ImNrcTQybTFoZzE0aDQyeXM1aGNmYnR1MnoifQ.4kRWNfEH_Yao_mmdgrgjPA\";\n  const map = L.mapbox.map(\"map\").setView([37.9, -77], 6);\n  L.mapbox.styleLayer(\"mapbox://styles/mapbox/streets-v11\").addTo(map) // add your tiles to the map\n  .on(\"load\", finishedLoading);\n  const marker = L.marker([0, 0], {\n    icon: L.mapbox.marker.icon({\n      \"marker-size\": \"large\",\n      \"marker-color\": \"blue\"\n    })\n  }).addTo(map);\n  var locationControl = L.control.locate({\n    circleStyle: {\n      opacity: 0\n    },\n    followCircleStyle: {\n      opacity: 0\n    },\n    drawCircle: false,\n    follow: false,\n    icon: \"fas fa-map-marker-alt\",\n    // follow the user's location\n    setView: false,\n    remainActive: false\n  }).addTo(map);\n  map.on(\"locationfound\", async function (e) {\n    let lat = e.latitude;\n    let lon = e.longitude;\n    var radius = e.accuracy;\n    localStorage.setItem(\"userLatLon\", `${lat}, ${lon}`);\n    const address = await convertLatLon(lat, lon);\n    setTimeout(() => {\n      if (address.features.length > 0) {\n        $(\"form\").first().find(\"input:eq(0)\").val(address.features[0].place_name);\n        $(\"#latlonForm\").find(\"input:eq(0)\").val(lat);\n        $(\"#latlonForm\").find(\"input:eq(1)\").val(lon);\n      }\n\n      map.fitBounds([[lat, lon]], {\n        padding: [50, 50]\n      });\n      const dmsCalculated = DDtoDMS(lat, lon);\n      var popup = L.popup({\n        autoPan: true,\n        keepInView: true\n      }).setContent(`\n            <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">${address.features[0].place_name}</h5>\n                  <p class=\"card-text\">\n\n\n\n                  <span><strong> Latitude: </strong> <span class=\"lat\">${lat} </span></span> <span> <strong>\n                  Longitude: <span class=\"lon\">${lon}</span></strong> </span>\n                  <br>\n                  <div class= \"mt-1\">\n                  ${dmsCalculated.lat} ${dmsCalculated.lon}\n                </div>\n                  </p>\n                  <div class=\" mt-2 altitude\">\n                  <button class=\"btn btn-primary btn-sm\" id=\"getAltitude\" type=\"button \">\n                      Get Altitude\n                  </button>\n              </div>\n                </div>\n              </div>\n            </div>\n        </div>\n\n\n          `);\n      marker.setLatLng([lat, lon]).bindPopup(popup).openPopup();\n    }, 500);\n    locationControl.stop(); // geocoder.query(`${lat}, ${lon}`);\n    // map.stopLocate();\n  });\n\n  const coordinatesGeocoder = function (query) {\n    // Match anything which looks like\n    // decimal degrees coordinate pair.\n    const matches = query.match(/^[ ]*(?:Lat: )?(-?\\d+\\.?\\d*)[, ]+(?:Lng: )?(-?\\d+\\.?\\d*)[ ]*$/i);\n\n    if (!matches) {\n      return null;\n    }\n\n    function coordinateFeature(lng, lat) {\n      return {\n        center: [lng, lat],\n        geometry: {\n          type: \"Point\",\n          coordinates: [lng, lat]\n        },\n        place_name: \"Lat: \" + lat + \" Lng: \" + lng,\n        place_type: [\"coordinate\"],\n        properties: {},\n        type: \"Feature\"\n      };\n    }\n\n    const coord1 = Number(matches[1]);\n    const coord2 = Number(matches[2]);\n    const geocodes = [];\n\n    if (coord1 < -90 || coord1 > 90) {\n      // must be lng, lat\n      geocodes.push(coordinateFeature(coord1, coord2));\n    }\n\n    if (coord2 < -90 || coord2 > 90) {\n      // must be lat, lng\n      geocodes.push(coordinateFeature(coord2, coord1));\n    }\n\n    if (geocodes.length === 0) {\n      // else could be either lng, lat or lat, lng\n      geocodes.push(coordinateFeature(coord1, coord2));\n      geocodes.push(coordinateFeature(coord2, coord1));\n    }\n\n    return geocodes;\n  };\n\n  async function getElevation(lon, lat) {\n    // Construct the API request\n    const query = await fetch(`https://api.mapbox.com/v4/mapbox.mapbox-terrain-v2/tilequery/${lon},${lat}.json?layers=contour&limit=50&access_token=pk.eyJ1IjoibG9nYW41MjAxIiwiYSI6ImNrcTQycnlhMDBlb2kydXBwZHoyOGNsY3EifQ.E8N4lPy6tiI0xY3nor3MTg`, {\n      method: \"GET\"\n    });\n    if (query.status !== 200) return;\n    const data = await query.json(); // Display the longitude and latitude values\n    // Get all the returned features\n\n    const allFeatures = data.features; // For each returned feature, add elevation data to the elevations array\n\n    const elevations = allFeatures.map(feature => feature.properties.ele); // In the elevations array, find the largest value\n\n    const highestElevation = Math.max(...elevations);\n    $(\".altitude\").html(`<div> ${highestElevation} meters </div>`);\n  }\n\n  $(document).on(\"click\", \"#getAltitude\", function (e) {\n    e.preventDefault();\n    let lat = $(\".lat\").html();\n    let lon = $(\".lon\").html();\n    getElevation(lon, lat);\n  });\n  $(\"#getTravelForm\").on(\"submit\", async function (e) {\n    e.preventDefault(); //console.log($(this).find(\"input:eq(0)\").val())\n\n    const value = $(this).find(\"input:eq(0)\").val();\n    const fetchResponse = await convertAddress(value);\n    console.log(fetchResponse);\n    setTimeout(() => {\n      if (fetchResponse.features.length > 0) {\n        let lat = fetchResponse.features[0].geometry.coordinates[1];\n        let lon = fetchResponse.features[0].geometry.coordinates[0];\n        console.log(lat);\n        $(\"#latlonForm\").find(\"input:eq(0)\").val(lat);\n        $(\"#latlonForm\").find(\"input:eq(1)\").val(lon);\n        const dmsCalculated = DDtoDMS(lat, lon);\n        map.fitBounds([[lat, lon]], {\n          padding: [50, 50]\n        });\n        var popup = L.popup({\n          autoPan: true,\n          keepInView: true\n        }).setContent(`\n    <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">${value}</h5>\n          <p class=\"card-text\">\n\n\n\n          <span><strong> Latitude: </strong> <span class=\"lat\">${lat} </span></span> <span> <strong>\n          Longitude: <span class=\"lon\">${lon}</span></strong> </span>\n          <br>\n          <div class= \"mt-1\">\n          ${dmsCalculated.lat} ${dmsCalculated.lon}\n        </div>\n          </p>\n          <div class=\" mt-2 altitude\">\n          <button class=\"btn btn-primary btn-sm\" id=\"getAltitude\" type=\"button \">\n              Get Altitude\n          </button>\n      </div>\n        </div>\n      </div>\n    </div>\n</div>\n\n\n  `);\n        marker.setLatLng([lat, lon]).bindPopup(popup).openPopup();\n      }\n    }, 200);\n  });\n  const title = $(\"title\").html();\n  const pageTitle = title.slice(11);\n  console.log(pageTitle);\n  let bookmarkControl = new L.Control.Bookmarks({\n    name: pageTitle\n  }).addTo(map);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/addressToLatLon.js\n");

/***/ }),

/***/ 2:
/*!*****************************************!*\
  !*** multi ./src/js/addressToLatLon.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./src/js/addressToLatLon.js */"./src/js/addressToLatLon.js");


/***/ })

/******/ });